version: '3.7'

services:
  reverse-proxy:
    image: traefik:v2.1
    command:
      - "--providers.docker=true"
      - "--entryPoints.web.address=:80"
      - "--entryPoints.websecure.address=:443"
      - "--certificatesResolvers.le.acme.email=roni.lindholm@gmail.com"
      - "--certificatesResolvers.le.acme.storage=acme.json"
      - "--certificatesResolvers.le.acme.tlsChallenge=true"
      - "--certificatesResolvers.le.acme.httpChallenge=true"
      - "--certificatesResolvers.le.acme.httpChallenge.entryPoint=web"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
      # - ./traefik/traefik-prod.toml:/traefik-prod.toml # Traefik configuration file
      # - ./traefik/traefik-prod.config.toml:/traefik-prod.config.toml # Traefik configuration file
      - ./traefik/acme.json:/acme.json
    labels:
      # Redirect all HTTP to HTTPS permanently
      - traefik.http.routers.http_catchall.rule=HostRegexp(`{any:.+}`)
      - traefik.http.routers.http_catchall.entrypoints=web
      - traefik.http.routers.http_catchall.middlewares=https_redirect
      - traefik.http.middlewares.https_redirect.redirectscheme.scheme=https
      - traefik.http.middlewares.https_redirect.redirectscheme.permanent=true
  db:
    image: kartoza/postgis
    volumes:
        - postgres_data:/var/lib/postgresql
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASS: postgres
      POSTGRES_DBNAME: postgres
      ALLOW_IP_RANGE: 0.0.0.0/0
    expose:
      - 5432
  backend:
    build: ./backend
    command: bash -c 'while !</dev/tcp/db/5432; do sleep 1; done; python /code/manage.py runserver 0.0.0.0:8000'
    volumes:
      - ./backend/app:/code
    environment:
        DJANGO_SETTINGS_MODULE: conf.settings
    depends_on:
      - db
    expose:
      - 8000
    labels:
      - traefik.http.routers.backend.rule=(Host(`134.122.68.129`, `helka.dog`) && PathPrefix(`/api`))
      - traefik.http.routers.backend.tls=true
      - traefik.http.routers.backend.tls.certresolver=le
      - traefik.http.routers.backend.middlewares=backend@docker
  frontend:
    build:
      context: ./frontend
      dockerfile: ./Dockerfile-prod
    volumes:
      - ./frontend:/frontend
    expose:
      - 80
    links:
      - backend
      - reverse-proxy
    labels:
      - traefik.http.routers.frontend.rule=Host(`134.122.68.129`, `helka.dog`)
      - traefik.http.routers.frontend.tls=true
      - traefik.http.routers.frontend.tls.certresolver=le
      - traefik.http.routers.frontend.middlewares=frontend@docker
  h02-tracker:
    build: ./tracker-server
    ports:
      - "5001:5001"
    volumes:
      - ./tracker-server:/code
    depends_on:
      - backend
    links:
      - backend
volumes:
  postgres_data: