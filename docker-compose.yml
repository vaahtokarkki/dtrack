version: '3.7'

services:
  reverse-proxy:
    image: traefik:v2.1
    command: --providers.docker
    ports:
      - "80:80"
      - "443:443"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
      # Map the certificats into the container
      - ./certs:/etc/certs:ro
      - ./traefik/traefik.toml:/traefik.toml # Traefik configuration file
      - ./traefik/traefik.config.toml:/traefik.config.toml # Traefik configuration file
  db:
    image: kartoza/postgis
    volumes:
        - postgres_data:/var/lib/postgresql
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASS: postgres
      POSTGRES_DBNAME: postgres
      ALLOW_IP_RANGE: 0.0.0.0/0
    expose:
      - 5432
  backend:
    build: ./backend
    container_name: backend
    command: bash -c 'while !</dev/tcp/db/5432; do sleep 1; done; python /code/manage.py runserver 0.0.0.0:8000'
    volumes:
      - ./backend/app:/code
      - ./backend/logs:/code/logs
    environment:
        DJANGO_SETTINGS_MODULE: conf.settings
        DJANGO_SECRET:
    depends_on:
      - db
    expose:
      - 8000
    labels:
      - traefik.http.routers.backend.rule=(Host(`localhost`) && PathPrefix(`/api`)) || (Host(`192.168.11.5`) && PathPrefix(`/api`))
      - traefik.http.routers.backend.entrypoints=http
      - traefik.http.routers.backend.middlewares=redirect@file
      - traefik.http.routers.backends.rule=(Host(`localhost`) && PathPrefix(`/api`)) || (Host(`192.168.11.5`) && PathPrefix(`/api`))
      - traefik.http.routers.backends.entrypoints=https
      - traefik.http.routers.backends.tls=true
  frontend:
    build: ./frontend
    volumes:
      - ./frontend:/frontend
    expose:
      - 3000
    links:
      - backend
      - reverse-proxy
    labels:
      - traefik.http.routers.frontend.rule=Host(`localhost`, `192.168.11.5`)
      - traefik.http.routers.frontend.entrypoints=http
      - traefik.http.routers.frontend.middlewares=redirect@file
      - traefik.http.routers.frontends.rule=Host(`localhost`, `192.168.11.5`)
      - traefik.http.routers.frontends.entrypoints=https
      - traefik.http.routers.frontends.tls=true
  adminer:
    image: adminer
    depends_on:
      - db
    expose:
      - 8080
    labels:
      - "traefik.http.routers.adminer.rule=Host(`adminer.localhost`)"
  h02-tracker:
    build: ./tracker-server
    ports:
      - "5001:5001"
    volumes:
      - ./tracker-server:/code
    depends_on:
      - backend
    links:
      - backend
  redis:
    image: redis:5.0-alpine
    volumes:
        - redis_data:/data
    expose:
      - 6379
  celery:
    build: ./backend
    command: ["celery", "worker", "-A", "conf.celery"]
    volumes:
      - ./backend/app:/code
    depends_on:
      - redis
      - db
      - backend

volumes:
  postgres_data:
  redis_data: