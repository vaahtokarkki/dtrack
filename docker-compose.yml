version: '3.7'

services:
  reverse-proxy:
    image: traefik:v2.1
    command: --providers.docker
    ports:
      - "80:80"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
  db:
    image: kartoza/postgis
    volumes:
        - postgres_data:/var/lib/postgresql
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASS: postgres
      POSTGRES_DBNAME: postgres
      ALLOW_IP_RANGE: 0.0.0.0/0
  backend:
    build: ./backend
    command: python /code/manage.py runserver 0.0.0.0:8000
    volumes:
      - ./backend/app:/code
    environment:
        DJANGO_SETTINGS_MODULE: conf.settings
    depends_on:
      - db
    expose:
      - 8000
    labels:
      - "traefik.http.routers.backend.rule=Host(`localhost`) && Path(`/api`)"
  frontend:
    build: ./frontend
    volumes:
      - ./frontend:/frontend
    expose:
      - 3000
    links:
      - backend
      - reverse-proxy
    labels:
      - "traefik.http.routers.frontend.rule=Host(`localhost`)"
  adminer:
    image: adminer
    depends_on:
      - db
    expose:
      - 8080
    labels:
      - "traefik.http.routers.adminer.rule=Host(`localhost`) && Path(`/adminer`)"

volumes:
  postgres_data: